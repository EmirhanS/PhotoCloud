/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package page;

import java.awt.Image;
import java.awt.event.MouseEvent;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Scanner;

import javax.swing.ImageIcon;
import javax.swing.JLabel;

/**
 *
 * @author emirh
 */
public class ProfilePage extends javax.swing.JFrame {

    /**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private String profileUsername;
	private String stalkerUsername;
	private String adminUser;
	/**
     * Creates new form ProfilePage
     */
    public ProfilePage(String profileUsername, String stalkerUsername) {
    	this.profileUsername = profileUsername;
    	this.stalkerUsername = stalkerUsername;
        initComponents();
        refreshPhotos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        nicknameFrame = new javax.swing.JLabel();
        postCounterFrame = new javax.swing.JLabel();
        followingCounterFrame = new javax.swing.JLabel();
        followerCounterFrame = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        editProfile = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        nicknameFrame.setText(profileUsername);

        postCounterFrame.setText("Posts");

        followingCounterFrame.setText("Following");

        followerCounterFrame.setText("Followers");
        
        try {
			File file = new File("./users.txt");
			Scanner in = new Scanner(file);
        while(in.hasNextLine()) {
        	String user = in.nextLine();
        	String[] userSplit = user.split(";");
        	if(userSplit[6].equals("Admin User")) {
        		adminUser = userSplit[3];
        	}
        }
		} catch (FileNotFoundException e3) {
			// TODO Auto-generated catch block
			e3.printStackTrace();
		}

        try {
			String path = "./src/userInfo/"+profileUsername+"/post.txt";
			File file = new File(path);
			Scanner input = new Scanner(file);
			String post = input.next();
			jLabel2.setText(post);
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
        

        try {
			String path = "./src/userInfo/"+profileUsername+"/following.txt";
			File file = new File(path);
			Scanner input = new Scanner(file);
			String following = input.next();
			jLabel3.setText(following);
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

        try {
			String path = "./src/userInfo/"+profileUsername+"/follower.txt";
			File file = new File(path);
			Scanner input = new Scanner(file);
			String follower = input.next();
			jLabel4.setText(follower);
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

        jLabel5.setPreferredSize(new java.awt.Dimension(50, 50));
        String path = "./src/userInfo/";
        ImageIcon newPhoto = new javax.swing.ImageIcon(path+stalkerUsername+"/profilePhoto.png"); // NOI18N
        ImageIcon resizedIcon = new ImageIcon(newPhoto.getImage().getScaledInstance(50, 50, Image.SCALE_SMOOTH));
		jLabel5.setIcon(resizedIcon);
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
        	public void mouseClicked(java.awt.event.MouseEvent evt) {
        		jLabel5MouseClicked(evt);
        	}
        });

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/page/icons8-home-50.png"))); // NOI18N
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/page/icons8-search-50.png"))); // NOI18N
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/page/icons8-plus-50.png"))); // NOI18N
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel8MouseClicked(evt);
            }
        });
        
        jLabel1.setIcon(new javax.swing.ImageIcon(path+profileUsername+"/profilePhoto.png")); // NOI18N
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });
        
        
        if(stalkerUsername.equals(adminUser)) {
        	editProfile.setText("Edit Profile");
        	if(profileUsername.equals(adminUser)) {
        		jButton1.setText("Log Out");
        	}else {
        		jButton1.setText("Profile Info");
        	}
        }else if(!stalkerUsername.equals(profileUsername)) {
        	try {
        		boolean doFollow = false;
        		File fil = new File("./src/userInfo/"+stalkerUsername+"/followingList.txt");
				Scanner input = new Scanner(fil);
				while(input.hasNextLine()) {
					if(input.nextLine().equals(profileUsername)) {
						doFollow = true;
					}
				}
				if(doFollow) {
					editProfile.setText("Followed");
				}
				else editProfile.setText("Follow");
				jButton1.setText("Profile Info");
			} catch (FileNotFoundException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
        }else {
        	editProfile.setText("Edit Profile");
        	jButton1.setText("Log Out");
        }
        editProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editProfileActionPerformed(evt);
            }
        });

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jPanel1.setLayout(new java.awt.GridLayout(0,3));
        jScrollPane1.setViewportView(jPanel1);

        
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(74, 124, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nicknameFrame, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(editProfile, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(postCounterFrame)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(10, 10, 10)
                                    .addComponent(jLabel2)))
                            .addGap(40, 40, 40)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(followingCounterFrame)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(20, 20, 20)
                                    .addComponent(jLabel3)))
                            .addGap(40, 40, 40)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(followerCounterFrame)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(19, 19, 19)
                                    .addComponent(jLabel4))))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addGap(37, 37, 37)
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(nicknameFrame, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(postCounterFrame)
                            .addComponent(followingCounterFrame)
                            .addComponent(followerCounterFrame))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(editProfile)
                            .addComponent(jButton1)))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void jLabel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseClicked
        // TODO add your handling code here:
    	post.PostUpload postUpload = new post.PostUpload(stalkerUsername);
    	this.dispose();
    	postUpload.setVisible(true);
    	postUpload.pack();
    }//GEN-LAST:event_jLabel8MouseClicked

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        // TODO add your handling code here:
    	SearchPage searchPage = new SearchPage(stalkerUsername);
    	this.dispose();
    	searchPage.setVisible(true);
    	searchPage.pack();
    }//GEN-LAST:event_jLabel7MouseClicked

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        // TODO add your handling code here:
    	HomePage homePage = new HomePage(stalkerUsername);
    	this.dispose();
    	homePage.setVisible(true);
    	homePage.pack();
    }//GEN-LAST:event_jLabel6MouseClicked
    
    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {                                     
    	// TODO add your handling code here:
    	ProfilePage yourProfile = new ProfilePage(stalkerUsername,stalkerUsername);
    	this.dispose();
    	yourProfile.setVisible(true);
		yourProfile.pack();
    }                                    
    
    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {                                     
    	// TODO add your handling code here:
    }                                    

    private void editProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editProfileActionPerformed
        // TODO add your handling code here:
    	if(editProfile.getText().equals("Follow")) {
    		editProfile.setText("Followed");//Follow it and add it to profile user's followers
   			String path = "./src/userInfo/";
   			try {
   				File file = new File(path+profileUsername+"/follower.txt");
   				Scanner input = new Scanner(file);
    			int follower = Integer.parseInt(input.next());
    			follower+=1;
				try {
					//Adding follower to follower count
					File followerFile = new File(path+profileUsername+"/follower.txt");
					PrintWriter writerFollower;
					writerFollower = new PrintWriter(new FileWriter(followerFile));
					writerFollower.print(follower);
					writerFollower.close();
					jLabel4.setText(String.format("%d", follower));
					//Adding follower to followerList
					File followerList = new File(path+profileUsername+"/followerList.txt");
					PrintWriter writerFollowerList = new PrintWriter(new FileWriter(followerList,true));
					writerFollowerList.printf("%s%n",stalkerUsername);
					writerFollowerList.close();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
    		} catch (FileNotFoundException e) {
    			// TODO Auto-generated catch block
    			e.printStackTrace();
   			}
   			try {
   				File file = new File(path+stalkerUsername+"/following.txt");
   				Scanner input = new Scanner(file);
   				int following = Integer.parseInt(input.next());
   				following+=1;
   				try {
   					//Adding following to following count
   					File followingFile = new File(path+stalkerUsername+"/following.txt");
   					PrintWriter writerFollowing;
   					writerFollowing = new PrintWriter(new FileWriter(followingFile));
   					writerFollowing.print(following);
   					writerFollowing.close();
   					//Adding following to followingList
					File followingList = new File(path+stalkerUsername+"/followingList.txt");
					PrintWriter writerFollowingList = new PrintWriter(new FileWriter(followingList,true));
					writerFollowingList.printf("%s%n",profileUsername);
					writerFollowingList.close();
   				} catch (IOException e) {
   					// TODO Auto-generated catch block
   					e.printStackTrace();
   				}
   			} catch (FileNotFoundException e) {
   				// TODO Auto-generated catch block
   				e.printStackTrace();
   			}
   			
   		}
    	else if(editProfile.getText().equals("Followed")){
    		editProfile.setText("Follow");
    		String path = "./src/userInfo/";
   			try {
   				//Substracting follower from follower count
   				File file = new File(path+profileUsername+"/follower.txt");
   				Scanner input = new Scanner(file);
    			int follower = Integer.parseInt(input.next());
    			follower-=1;
				try {
					File followerFile = new File(path+profileUsername+"/follower.txt");
					PrintWriter writerFollower = new PrintWriter(new FileWriter(followerFile));
					writerFollower.print(follower);
					writerFollower.close();
					jLabel4.setText(String.format("%d", follower));
					//Substracting follower from followerList
					File followerList = new File(path+profileUsername+"/followerList.txt");
					Scanner inputFollowerList = new Scanner(followerList);
					ArrayList<String> followerListArray = new ArrayList<>();
					while(inputFollowerList.hasNextLine()) {
						String user = inputFollowerList.nextLine();
						followerListArray.add(user);
					}
					followerListArray.remove(stalkerUsername);
					PrintWriter writerFollowerList = new PrintWriter(new FileWriter(followerList));
					writerFollowerList.print("");
					writerFollowerList.close();
					PrintWriter writerFollowerListSecond = new PrintWriter(new FileWriter(followerList,true));
					for(String user:followerListArray) {
						writerFollowerListSecond.print(user);
					}
					writerFollowerListSecond.close();
				}catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
    		} catch (FileNotFoundException e) {
    			// TODO Auto-generated catch block
    			e.printStackTrace();
   			}
   			try {
   				//Substracting following from following count
   				File file = new File(path+stalkerUsername+"/following.txt");
   				Scanner input = new Scanner(file);
   				int following = Integer.parseInt(input.next());
   				following-=1;
   				try {
   					File followingFile = new File(path+stalkerUsername+"/following.txt");
   					PrintWriter writerFollowing;
   					writerFollowing = new PrintWriter(new FileWriter(followingFile));
   					writerFollowing.print(following);
   					writerFollowing.close();
   					//Substracting following from followingList
					File followingList = new File(path+stalkerUsername+"/followingList.txt");
					Scanner inputFollowingList = new Scanner(followingList);
					ArrayList<String> followingListArray = new ArrayList<>();
					while(inputFollowingList.hasNextLine()) {
						String user = inputFollowingList.nextLine();
						followingListArray.add(user);
					}
					followingListArray.remove(profileUsername);
					PrintWriter writerFollowingList = new PrintWriter(new FileWriter(followingList));
					writerFollowingList.print("");
					writerFollowingList.close();
					PrintWriter writerFollowingListSecond = new PrintWriter(new FileWriter(followingList,true));
					for(String user:followingListArray) {
						writerFollowingListSecond.print(user);
					}
					writerFollowingListSecond.close();
   				} catch (IOException e) {
   					// TODO Auto-generated catch block
   					e.printStackTrace();
   				}
   			} catch (FileNotFoundException e) {
   				// TODO Auto-generated catch block
   				e.printStackTrace();
   			}
    	}
    	else {
    		EditProfilePage pg = new EditProfilePage(profileUsername);
    		pg.setVisible(true);
    		pg.pack();
    	}
    }//GEN-LAST:event_editProfileActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    	if(jButton1.getText().equals("Log Out")) {
    		this.dispose();
    		LoginPage login = new LoginPage();
    		login.setVisible(true);
    		login.pack();
    	}
    	else {
    		ProfileInfoPage pg = new ProfileInfoPage(profileUsername);
    		pg.setVisible(true);
    		pg.pack();
    	}
    }//GEN-LAST:event_jButton1ActionPerformed
    public void refreshPhotos() {
    		try {
    			String path = "./src/userInfo/"+profileUsername;
    			File file = new File(path+"/post.txt");
    			Scanner input = new Scanner(file);
    			int postCount = Integer.parseInt(input.next());
    			for(int i = 0;i < postCount;i++) {
    				File f = new File(path+"/Posts/"+i+".png");
    				if(f.exists()) {
    					ImageIcon photo = new ImageIcon(path+"/Posts/"+i+".png");
    					ImageIcon resizedIcon = new ImageIcon(photo.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH));
    					JLabel lab = new JLabel(resizedIcon);
    					int photoNumber = i;
    					lab.addMouseListener(new java.awt.event.MouseAdapter() {
    						public void mouseClicked(java.awt.event.MouseEvent evt) {
    							labMouseClicked(evt);
    		                	}	
    						private void labMouseClicked(MouseEvent evt) {
    							// TODO Auto-generated method stub
    							dispose();
    							ProfilePage oldPage = new ProfilePage(profileUsername,stalkerUsername);
    							PhotoPage photo = new PhotoPage(profileUsername,stalkerUsername,photoNumber,oldPage);
    							photo.setVisible(true);
    							photo.pack();
    						}});
    					jPanel1.add(lab);
    				}
    				else postCount+=1;
    			}
    		} catch (FileNotFoundException e) {
    			// TODO Auto-generated catch block
    			e.printStackTrace();
		}
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProfilePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProfilePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProfilePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProfilePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new ProfilePage().setVisible(true);
//            }
//        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton editProfile;
    private javax.swing.JLabel followerCounterFrame;
    private javax.swing.JLabel followingCounterFrame;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel nicknameFrame;
    private javax.swing.JLabel postCounterFrame;
    // End of variables declaration//GEN-END:variables
}