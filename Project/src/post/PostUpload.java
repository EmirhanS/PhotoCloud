/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package post;

import java.awt.Graphics;
import java.awt.Image;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Scanner;

import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

import page.ProfilePage;

/**
 *
 * @author emirh
 */
public class PostUpload extends javax.swing.JFrame {

    private String uploadUsername;
    private String specialDescription;
	private Icon icon;
	/**
     * Creates new form PostUpload
     */
    public PostUpload(String uploadUsername) {
    	this.uploadUsername = uploadUsername;
        initComponents();
    }
    public PostUpload(String uploadUsername,Icon icon, String description) {
    	this.uploadUsername = uploadUsername;
    	this.icon=icon;
    	this.specialDescription = description;
    	initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        photo = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        postButton = new javax.swing.JButton();
        addButton = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        
        addWindowListener(new WindowAdapter() {
            //I skipped unused callbacks for readability

            @Override
            public void windowClosing(WindowEvent e) {
            	dispose();
            	ProfilePage profil = new ProfilePage(uploadUsername,uploadUsername);
            	profil.setVisible(true);
            	profil.pack();
            }
        });
        if(specialDescription!=null) {
        	jTextField1.setText(specialDescription);
        }
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        if(icon!=null) {
        	photo.setIcon(icon);
        }

        jLabel1.setText("Description");

        postButton.setText("Post");
        postButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                postButtonActionPerformed(evt);
            }
        });

        addButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/page/icons8-plus-50.png"))); // NOI18N
        addButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addButtonMouseClicked(evt);
            }
        });

        
        jButton1.setText("ADD EFFECTS");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(photo, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField1)
                                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addComponent(postButton)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(photo, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(addButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(3, 3, 3)))
                .addComponent(postButton)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void postButtonActionPerformed(java.awt.event.ActionEvent evt) {                                           
    	try {
    		// TODO add your handling code here:
    		// paint the Icon to the BufferedImage.
    		BufferedImage bi = new BufferedImage(
	    	    photo.getIcon().getIconWidth(),
	    	    photo.getIcon().getIconHeight(),
	    	    BufferedImage.TYPE_INT_RGB);
    		Graphics g = bi.createGraphics();
    		photo.getIcon().paintIcon(null, g, 0,0);
    		g.dispose();
    		// Adding photo to posts folder
    		String path = "./src/userInfo/"+uploadUsername;
    		File number = new File(path+"/post.txt");
    		Scanner input = new Scanner(number);
    		int postNumber = Integer.parseInt(input.next());
    		input.close();
    		File outputfile = new File(path+"/Posts/"+postNumber+".png");
			ImageIO.write(bi, "png", outputfile);
			// Adding photo comment text to posts folder
			File comments = new File("./src/userInfo/"+uploadUsername+"/Posts/"+postNumber+"comment.txt");
			PrintWriter writerComments = new PrintWriter(new FileWriter(comments,true));
			writerComments.close();
			// Adding photo likeCount text to posts folder
			File likeCount = new File("./src/userInfo/"+uploadUsername+"/Posts/"+postNumber+"likeCount.txt");
			PrintWriter likeCountWriter = new PrintWriter(new FileWriter(likeCount,true));
			likeCountWriter.print("0");
			likeCountWriter.close();
			// Adding photo likeCountList text to posts folder
			File likeCountList = new File("./src/userInfo/"+uploadUsername+"/Posts/"+postNumber+"likeCountList.txt");
			PrintWriter likeCountListWriter = new PrintWriter(new FileWriter(likeCountList,true));
			likeCountListWriter.print("");
			likeCountListWriter.close();
			// Adding photo dislikeCount text to posts folder
			File dislikeCount = new File("./src/userInfo/"+uploadUsername+"/Posts/"+postNumber+"dislikeCount.txt");
			PrintWriter dislikeCountWriter = new PrintWriter(new FileWriter(dislikeCount,true));
			dislikeCountWriter.print("0");
			dislikeCountWriter.close();
			// Adding photo dislikeCount text to posts folder
			File dislikeCountList = new File("./src/userInfo/"+uploadUsername+"/Posts/"+postNumber+"dislikeCount.txt");
			PrintWriter dislikeCountListWriter = new PrintWriter(new FileWriter(dislikeCountList,true));
			dislikeCountListWriter.print("");
			dislikeCountListWriter.close();
			// Adding description text file
			File descriptionText = new File("./src/userInfo/"+uploadUsername+"/Posts/"+postNumber+"description.txt");
			PrintWriter writerDescription = new PrintWriter(new FileWriter(descriptionText,true));
			writerDescription.print(jTextField1.getText());
			writerDescription.close();
			// Increasing post count 
			postNumber+=1; 
			PrintWriter writerPost= new PrintWriter(new FileWriter(number));
			writerPost.print(postNumber);
			writerPost.close();
			// Closing post upload and opening profile again
			page.ProfilePage newProfilePage = new page.ProfilePage(uploadUsername, uploadUsername);
			this.dispose();
			newProfilePage.setVisible(true);
			newProfilePage.pack();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	
    }                                          

    private void addButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addButtonMouseClicked
        // TODO add your handling code here:
    	JFileChooser fileChooser = new JFileChooser();
    	fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
    	int result = fileChooser.showOpenDialog(this);
    	if (result == JFileChooser.APPROVE_OPTION) {
    		File selectedFile = fileChooser.getSelectedFile();
    		ImageIcon newPhoto = new ImageIcon(selectedFile.getAbsolutePath());
    		ImageIcon resizedIcon = new ImageIcon(newPhoto.getImage().getScaledInstance(300, 300, Image.SCALE_SMOOTH));
    		photo.setIcon(resizedIcon);
    	}
    }//GEN-LAST:event_addButtonMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    	if(photo.getIcon()!=null) {
    		this.dispose();
    		PhotoEffect effectPage = new PhotoEffect(photo.getIcon(),jTextField1.getText(),uploadUsername);
    		effectPage.setVisible(true);
    		effectPage.pack();
    	}else {
    		JOptionPane.showMessageDialog(null,"Before editing, please add photo!");
    	}
    }//GEN-LAST:event_jButton1ActionPerformed
    /**
     * @param args the command line arguments
     */

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PostUpload.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PostUpload.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PostUpload.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PostUpload.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new PostUpload().setVisible(true);
//            }
//        });
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel photo;
    private javax.swing.JButton postButton;
    // End of variables declaration//GEN-END:variables
}
