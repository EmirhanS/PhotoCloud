/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package post;

import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;

import javax.swing.*;

import image.Filters;
/**
 *
 * @author emirh
 */
public class PhotoEffect extends javax.swing.JFrame {

    /**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Icon icon;
	private String description;
	private String uploadUsername;
	private String userType;

	/**
     * Creates new form PhotoEffect
     */
    public PhotoEffect(Icon icon, String description, String uploadUsername) {
    	this.icon=icon;
    	this.description=description;
    	this.uploadUsername=uploadUsername;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        photo = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        filterPanel = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        
        photo.setIcon(icon);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        filterPanel.setLayout(new java.awt.GridLayout(6,2));
        jScrollPane1.setViewportView(filterPanel);
        
        // Creating sliders and labels
        
        JLabel sharpenLabel = new JLabel("Sharpen");
        JSlider sharpenSlider = new JSlider(0, 20, 0);
        sharpenSlider.setMajorTickSpacing(2);
        sharpenSlider.setPaintTicks(true);
   		JLabel blurLabel = new JLabel("Blur");
  		JSlider blurSlider = new JSlider(0, 10, 0);
  		blurSlider.setMajorTickSpacing(1);
		blurSlider.setPaintTicks(true);
		JLabel grayscaleLabel = new JLabel("Grayscale");
		JSlider grayscaleSlider = new JSlider(50, 100, 50);
		grayscaleSlider.setMajorTickSpacing(5);
		grayscaleSlider.setPaintTicks(true);
		JLabel edgeLabel = new JLabel("Edge Detection");
		JSlider edgeSlider = new JSlider(0, 5, 0);
		edgeSlider.setMajorTickSpacing(1);
		edgeSlider.setPaintTicks(true);
		JLabel brightnessLabel = new JLabel("Brightness");
		JSlider brightnessSlider = new JSlider(-100, 100, 0);
		brightnessSlider.setMajorTickSpacing(10);
		brightnessSlider.setPaintTicks(true);
		JLabel contrastLabel = new JLabel("Contrast");
		JSlider contrastSlider = new JSlider(-6, 6, 0);
		contrastSlider.setMajorTickSpacing(1);
		contrastSlider.setPaintTicks(true);
		
		filterPanel.add(sharpenLabel);
		filterPanel.add(sharpenSlider);
		filterPanel.add(blurLabel);
		filterPanel.add(blurSlider);
		filterPanel.add(grayscaleLabel);
		filterPanel.add(grayscaleSlider);
		filterPanel.add(edgeLabel);
		filterPanel.add(edgeSlider);
		filterPanel.add(brightnessLabel);
		filterPanel.add(brightnessSlider);
		filterPanel.add(contrastLabel);
		filterPanel.add(contrastSlider);
		
		try {
			File file = new File("./users.txt");
			Scanner input = new Scanner(file);
			while(input.hasNextLine()) {
				String user = input.nextLine();
				String[] splitUser = user.split(";");
				if(splitUser[3].equals(uploadUsername)) {
					userType = splitUser[6];
				}
			}
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		if(userType.equals("Free User")) {
			grayscaleLabel.setVisible(false);
			grayscaleSlider.setVisible(false);
			edgeLabel.setVisible(false);
			edgeSlider.setVisible(false);
			brightnessLabel.setVisible(false);
			brightnessSlider.setVisible(false);
			contrastLabel.setVisible(false);
			contrastSlider.setVisible(false);
			
		}else if(userType.equals("Hobbyist User")) {
			brightnessLabel.setVisible(false);
			brightnessSlider.setVisible(false);
			contrastLabel.setVisible(false);
			contrastSlider.setVisible(false);
		}

        jButton1.setText("Apply Filters");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Save");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(19, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addComponent(photo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(photo, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    	BufferedImage buffered = new BufferedImage(
    		    icon.getIconWidth(),
    		    icon.getIconHeight(),
    		    BufferedImage.TYPE_INT_RGB);
    	Graphics g = buffered.createGraphics();
    	// paint the Icon to the BufferedImage.
    	icon.paintIcon(null, g, 0,0);
    	g.dispose();

		int blurValue = sliderBlur.getValue();
		int sharpenValue = sliderSharpen.getValue();
		double grayscaleValue = ((double) sliderGrayscale.getValue() / 100);
		int edgeValue = (sliderEdge.getValue());
		double contrastValue = sliderContrast.getValue();
		int brightnessValue = sliderBrightness.getValue();

		buffered = applyFilters(buffered, blurValue, sharpenValue, grayscaleValue, edgeValue, contrastValue,
				brightnessValue);

		ImageIcon imageIcon = new ImageIcon(buffered);
		photo.setIcon(imageIcon);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    	this.dispose();
    	PostUpload upload = new PostUpload(uploadUsername,icon,description);
    	upload.setVisible(true);
    	upload.pack();
    }//GEN-LAST:event_jButton2ActionPerformed
    public BufferedImage applyFilters(BufferedImage img, int blurValue, int sharpenValue, double grayscaleValue,
			int edgeValue, double contrastValue, int brightnessValue) {
		// Apply filters to the image
		// Get the values from the sliders

		img = Filters.blurFilter(img, blurValue);
		img = Filters.sharpenFilter(img, sharpenValue);
		if (grayscaleValue != 0.5) {
			img = Filters.grayscaleFilter(img, grayscaleValue);
		}
		if (edgeValue != 0) {
			img = Filters.edgeDetectionFilter(img, edgeValue);
		}

		if (contrastValue != 0) {
			img = Filters.contrastFilter(img, contrastValue);

		}
		img = Filters.brightnessFilter(img, brightnessValue);

		return img;

	}

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PhotoEffect.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PhotoEffect.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PhotoEffect.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PhotoEffect.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new PhotoEffect().setVisible(true);
//            }
//        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel filterPanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel photo;
	private JSlider sliderSharpen;
	private JSlider sliderEdge;
	private JSlider sliderGrayscale;
	private JSlider sliderBlur;
	private JSlider sliderBrightness;
	private JSlider sliderContrast;
    // End of variables declaration//GEN-END:variables
}
